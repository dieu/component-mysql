application:
  configuration:
    input.db-root-password: "uR1zaebah0Qu"
    input.db-port: 3306
    input.image: "us-east-1/ami-bf5021d6"
    input.image-user: "root"
    input.instance-size: "m1.small"
    input.recipe-url: "https://dl.dropboxusercontent.com/u/250836/mysql-cookbooks.tar.gz"

  interfaces:
    input:
      db-port: "bind(workflow#input.db-port)"
      db-root-password: "bind(workflow#input.db-root-password)"
      image: "bind(workflow#input.image)"
      image-user: "bind(workflow#input.image-user)"
      instance-size: "bind(workflow#input.instance-size)"
      recipe-url: "bind(workflow#input.recipe-url)"
    manage:
      schema: "bind(workflow#actions.schema-management)"
      db: "bind(workflow#actions.db-management)"
      user: "bind(workflow#actions.user-management)"
      file-query: "bind(workflow#actions.file-query)"
    output:
      db-host: "bind(workflow#result.db-host)"
      db-port: "bind(workflow#result.db-port)"
      dbms: "bind(workflow#result.dbms)"

  components:
    workflow:
      type: workflow.Instance
      interfaces:
        input:
          db-port: configuration(int)
          db-root-password: configuration(string)
          image: configuration(string)
          image-user: configuration(string)
          instance-size: configuration(string)
          recipe-url: configuration(string)
        actions:
          schema-management: receive-command(list<string> app-hosts, string db-user, string db-user-password, list<string> db-user-privileges => object connection)
          db-management: receive-command(string db-name, string db-action)
          user-management: receive-command(list<string> app-hosts, string db-name, string db-user, string db-user-password, list<string> db-user-privileges, string user-action)
          file-query: receive-command(object connection, list<string> sql-url)
        result:
          dbms: publish-signal(object)
          #for ui only
          db-port: publish-signal(string)
          db-host: publish-signal(string)

      configuration:
        configuration.workflows:  
          launch:
            parameters:
              - db-port:
                  description: MySQL Server version   
              - db-root-password:
                  description: Root Password

            steps:
              - provision-vm:
                  action: provisionVms
                  parameters:
                    hardwareId: "{$.instance-size}"
                    imageId: "{$.image}"
                    vmIdentity: "{$.image-user}"
                    roleName: default
                  output:
                    db-host: ips

              - install-mysql-db:
                  action: "chefsolo"
                  precedingPhases: [ provision-vm ]
                  parameters:
                    roles: [ default ]
                    runList: ["recipe[mysql_component]"]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      mysql:
                        server_root_password: "{$.db-root-password}"
                        server_repl_password: "{$.db-root-password}"
                        server_debian_password: "{$.db-root-password}"
                        port: "{$.db-port}"

            return:
              db-host:
                value: "{$.db-host[0]}"
              db-port:
                value: "3306"
              dbms:
                value:
                   db-admin-uri: "mysql://root:{$.db-root-password}@{$.db-host}:{$.db-port}"
                   db-type: "mysql"
                   db-root-user: "root"
                   db-root-password: "{$.db-root-password}"
                   db-host: "{$.db-host}"
                   db-port: "{$.db-port}"
                   db-driver: "com.mysql.jdbc.Driver"

          db-management:
            parameters:
              - db-name:
                  description: DB name
              - db-action:
                  description: What to do with DB (create, drop)
            steps:
              - manage-db:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[mysql_component::db_manage]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      mysql:
                        server_root_password: "{$.db-root-password}"
                        port: "{$.db-port}"
                      mysql_component:
                        schema:
                          dbname: "{$.db-name}"
                          db_action: "{$.db-action}"

          user-management:
            parameters:
              - app-hosts:
                  description: Allow connection from hosts (list)
              - db-name:
                  description: DB name
              - db-user:
                  description: DB user name
              - db-user-password:
                  description: DB user password
              - db-user-privileges:
                  description: DB user privileges
              - user-action:
                  description: What to do with user (create, grant, drop)
            steps:
              - manage-user:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[mysql_component::user_manage]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      mysql:
                        server_root_password: "{$.db-root-password}"
                        db-port: "{$.db-port}"
                      mysql_component:
                        schema:
                          dbname: "{$.db-name}"
                          username: "{$.db-user}"
                          password: "{$.db-user-password}"
                          privileges: "{$.db-user-privileges}"
                          action: "{$.user-action}"
                        hosts: "{$.app-hosts}"

          schema-management:
            parameters:
              - app-hosts:
                  description: Allow connection from hosts
              - db-user:
                  description: DB user name
              - db-user-password:
                  description: DB user password
              - db-user-privileges:
                  description: DB user privileges
            steps:
              - create-db:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[mysql_component::db_manage]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      mysql:
                        server_root_password: "{$.db-root-password}"
                        port: "{$.db-port}"
                      mysql_component:
                        schema:
                          dbname: "{$.db-user}"
                          db_action: "create"
              - create-user:
                  action: "chefsolo"
                  precedingPhases: [ create-db ]
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[mysql_component::user_manage]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      mysql:
                        server_root_password: "{$.db-root-password}"
                        db-port: "{$.db-port}"
                      mysql_component:
                        schema:
                          dbname: "{$.db-user}"
                          username: "{$.db-user}"
                          password: "{$.db-user-password}"
                          privileges: "{$.db-user-privileges}"
                          action: "grant"
                        hosts: "{$.app-hosts}"
            return:
              connection:
                value:
                  db-user-uri: "mysql://{$.db-user}:{$.db-user-password}@{$.db-host}:{$.db-port}/{$.db-user}"
                  db-type: "mysql"
                  db-name: "{$.db-user}"
                  db-user: "{$.db-user}"
                  db-user-password: "{$.db-user-password}"
                  db-host: "{$.db-host}"
                  db-port: "{$.db-port}"
                  db-driver: "com.mysql.jdbc.Driver"
                  db-dstype: "javax.sql.DataSource"
                  validation-query: "select 1"

          file-query:
            parameters:
              - connection:
                  description: Connection info object
              - sql-url:
                  description: SQL query urls (["url1", "url2"])
            steps:
              - run-file-query:
                  action: "chefsolo"
                  parameters:
                    roles: [ default ]
                    runList: [ "recipe[mysql_component::file_query]" ]
                    recipeUrl: "{$.recipe-url}"
                    jattrs:
                      mysql:
                        db-port: "{$.db-port}"
                      mysql_component:
                        schema:
                          dbname: "{$.connection.db-name}"
                          username: "{$.connection.db-user}"
                          password: "{$.connection.db-user-password}"
                        sql_url: "{$.sql-url}"
